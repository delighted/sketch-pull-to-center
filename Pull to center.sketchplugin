// Pull to center
//
// Move selected shapes or layers toward the center of artboard
//
// Copyright (c) 2015 Mike Gowen, Delighted Inc.

var hasCurrentArtboard = hasCurrentArtboard();
var hasValidSelectionCount = hasValidSelectionCount(selection, 1);
// TODO: Avoid calling if not the required selection count or no artboard.
var validSelectionTypes = [NSArray arrayWithObjects:[MSShapeGroup class], [MSLayerGroup class]];
var hasValidSelection = hasValidSelection(selection, validSelectionTypes);

if (hasValidSelection && hasCurrentArtboard && hasValidSelectionCount) {
  var currentArtboard = [[doc currentPage] currentArtboard],
    artboardFrame = [currentArtboard frame],
    artboardWidth = [artboardFrame width],
    artboardHeight = [artboardFrame height],
    artboardCenterX = artboardWidth / 2,
    artboardCenterY = artboardHeight / 2;

  var distance = [doc askForUserInput:"Distance to move (pixels):" initialValue:"0"];

  for (var i = 0; i < [selection count]; i++) {
    var layer = selection[i],
      frame = [layer frame],
      selectionWidth = [frame width],
      selectionHeight = [frame height],
      selectionX = [frame x],
      selectionY = [frame y],
      selectionCenteredX = selectionX + (selectionWidth / 2),
      selectionCenteredY = selectionY + (selectionHeight / 2);
    move(selection[i], artboardCenterX, artboardCenterY, selectionCenteredX, selectionCenteredY, distance);
  }
}

function move(selection, artboardCenterX, artboardCenterY, selectionCenteredX, selectionCenteredY, distance) {
  var x = artboardCenterX - selectionCenteredX,
    y = artboardCenterY - selectionCenteredY,
    angle = Math.atan(y / x),
    selectionXDiff = Math.cos(angle) * distance,
    selectionYDiff = Math.sin(angle) * distance,
    newSelectionCenteredX = newXPosition(selectionCenteredX, selectionXDiff, artboardCenterX),
    newSelectionCenteredY = newYPosition(selectionCenteredY, selectionYDiff, artboardCenterY);

    if ((selectionCenteredX < artboardCenterX) && (newSelectionCenteredX > artboardCenterX)) {
      newSelectionCenteredX = artboardCenterX;
    }
    if ((selectionCenteredX > artboardCenterX) && (newSelectionCenteredX < artboardCenterX)) {
      newSelectionCenteredX = artboardCenterX;
    }
    if ((selectionCenteredY < artboardCenterY) && (newSelectionCenteredY > artboardCenterY)) {
      newSelectionCenteredY = artboardCenterY;
    }
    if ((selectionCenteredY > artboardCenterY) && (newSelectionCenteredY < artboardCenterY)) {
      newSelectionCenteredY = artboardCenterY;
    }

    var selectionFrame = [selection frame];
    var newSelectionX = Math.round(newSelectionCenteredX - ([selectionFrame width] / 2));
    var newSelectionY = Math.round(newSelectionCenteredY - ([selectionFrame height] / 2));
  [selectionFrame setX:newSelectionX];
  [selectionFrame setY:newSelectionY];
}

function newXPosition(selectionCenteredX, selectionXDiff, artboardCenterX) {
  if (selectionCenteredX > artboardCenterX) {
    return selectionCenteredX - Math.abs(selectionXDiff);
  } else {
    return selectionCenteredX + Math.abs(selectionXDiff);
  }
}

function newYPosition(selectionCenteredY, selectionYDiff, artboardCenterY) {
  if (selectionCenteredY > artboardCenterY) {
    return selectionCenteredY - Math.abs(selectionYDiff);
  } else {
    return selectionCenteredY + Math.abs(selectionYDiff);
  }
}

function hasCurrentArtboard() {
  if ([[doc currentPage] currentArtboard]) {
    return true;
  } else {
    [doc showMessage:"Please make sure the shapes or layers you are moving are within an artboard."];
    return false;
  }
}

function hasValidSelectionCount(selection, minSelectionCount) {
  if ([selection count] >= minSelectionCount) {
    return true;
  } else {
    errorMsg = "Please make sure at least " + minSelectionCount + " shape or layer is selected."
    [doc showMessage:errorMsg];
    return false;
  }
}

function hasValidSelection(selection, validSelectionTypes) {
  var hasValidSelection = true;
  var loop = [selection objectEnumerator];
  while (selectionItem = [loop nextObject]) {
    if (hasValidSelection) {
      if (![validSelectionTypes containsObject:[selectionItem class]]) {
        hasValidSelection = false;
        [doc showMessage:"Please make sure you have ONLY shapes or layers selected."];
      }
    }
  }
  return hasValidSelection;
}
